var StoredSettings=function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}const n=[{type:String,default:"",parse:e=>e,serialize:e=>e},{type:Number,default:null,parse:e=>parseInt(e,10),serialize:e=>e+""},{type:Boolean,default:!1,parse:e=>"1"===e,serialize:e=>e+0+""},{type:Array,default:()=>[],parse:e=>e&&"["===e[0]&&JSON.parse(e)||[],serialize:e=>JSON.stringify(e)},{type:Object,default:()=>{},parse:e=>e&&"{"===e[0]&&JSON.parse(e)||{},serialize:e=>JSON.stringify(e),deep:!0},{type:Date,default:()=>null,parse:e=>0===e.trim().length?null:Date.parse(e),serialize:e=>null==e?"":e.toISOString()}];const r=new(t(e).default)({});return function(e,t,s=localStorage){Array.isArray(t)&&(t=t.reduce(((e,t)=>Object.assign(e,{[t]:{default:null}})),{}));const i=Object.keys(t);i.forEach((e=>{const r=t[e];t[e]=function(e){let t;if(null!=(t=n.find((t=>t.type===e))))return t;if(null!=(t=n.find((t=>t.type===e.type))))return Object.assign({},t,e);if(null!==(t=e.type)&&"parse"in t&&"serialize"in t)return console.debug("Using custom type",t),Object.assign({},t,e);if(null!==(t=e.type)&&"parse"in t&&"toJSON"in t.prototype)return console.debug("Using custom type with toJSON serializer",t),Object.assign({},t,{serialize:e=>JSON.stringify(e)},e);if("parse"in e&&"serialize"in e)return e;throw new Error("Custom type must provide 'parse' and 'serialize' static methods")}(r)}));const a=function(n){return(e?e+".":"")+(t[n].as||n)},l=function(e){const n=t[e],r=a(e);let i=s.getItem(r);return null==i&&(i="function"==typeof n.default?n.default():n.default),n.parse?n.parse(i):i},o=function(e){const n=t[e],i=a(e);return function(e){if(null==e)return;const t=n.serialize?n.serialize(e):e;s.setItem(i,t),r.$emit(i,e)}},u={},f={};let c=null;return{data(){const e={};for(const t of i)e[t]=l(t);return e},created(){for(const e of i){const n=t[e],s=a(e),i=n.type===Array?t=>this[e].splice(0,this[e].length,...t):t=>this[e]=t;!1!==n.readonly&&this.$watch(e,{handler:o(e),deep:n.deep||!1}),u[e]=t=>{this[e]!==t&&i(t)},f[s]=t=>{const r=n.parse(t.newValue);this[e]!==r&&i(r)},r.$on(s,u[e])}c=e=>{f[e.key]&&f[e.key](e)},window.addEventListener("storage",c)},destroyed(){c&&window.removeEventListener("storage",c);for(const e of i)r.$off(a(e),u[e])}}}}(Vue);
